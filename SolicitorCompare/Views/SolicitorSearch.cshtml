@using SolicitorCompare.Helpers
@using SolicitorCompare.Models
@inherits Umbraco.Web.Mvc.UmbracoViewPage<SearchModel>

@{
  Layout = "master.cshtml";
  var contactNode = Umbraco.ContentSingleAtXPath(XPath.ContactUs);
  var contactUrl = "";

  if (contactNode != null)
  {
    contactUrl = contactNode.Url;
  }
  else
  {
    contactNode = Umbraco.Content(1386);
    contactUrl = contactNode.Url;
  }

  var query = Request.QueryString;
  var results = new List<IPublishedContent>();
  var searchHelper = new SolicitorSearchHelper();

  if (query.Count > 0)
  {
    string form = Request.QueryString.Get("form") ?? "";
    if (!form.IsNullOrWhiteSpace())
    {
      Model.Form = form.ToLower();

      switch (Model.Form)
      {
        case "road-traffic-accident":
        {
          var qDateOfAcident = HttpUtility.UrlDecode(Request.QueryString.Get("dateOfAccident"));
          qDateOfAcident = qDateOfAcident.Replace(@"\", "");

          Model.AccidentDate = DateTime.Parse(qDateOfAcident);
          Model.Fault = HttpUtility.UrlDecode(Request.QueryString.Get("fault"));
          Model.Passengers = HttpUtility.UrlDecode(Request.QueryString.Get("passengers")).ToLower() == "yes";
          Model.Damage = HttpUtility.UrlDecode(Request.QueryString.Get("damage"));
          Model.Minors = HttpUtility.UrlDecode(Request.QueryString.Get("minors")).ToLower() == "yes";
          Model.Hospital = HttpUtility.UrlDecode(Request.QueryString.Get("visitHospital")).ToLower() == "yes";
          Model.Obscure = HttpUtility.UrlDecode(Request.QueryString.Get("obscureLocation")).ToLower() == "yes";
          Model.Compensation = HttpUtility.UrlDecode(Request.QueryString.Get("receivedCompensation"));

          results = searchHelper.GetRTASolicitorResults(Model);

          break;
        }
        case "remortgage":
        case "purchase-property":
        case "sell-property":
        case "transfer-of-equity":
        {
          results = searchHelper.GetConveyanceSolicitorResults();
          break;
        }
      }
    }
  }
}
@Html.Partial("_PageHeading")

<div class="container">
  <div class="solicitor-search">
    @if (results.Count > 0)
    {
      <div class="solicitor-search__status">
        <strong>Congratulations!</strong> We successfully found the following solicitors who would be willing to take your case.
      </div>
    }
    else
    {
      <div class="solicitor-search__status --failed">
        Unfortunately we could not find any solicitors who would be willing to take your case. If you would like more assistance please <a href="@contactUrl" class="solicitor-search__status__link">contact us</a>.
      </div>

      if (!query.Get("form").IsNullOrWhiteSpace())
      {
        var searchUrl = "";

        var form = query.Get("form").ToLower();
        switch (form)
        {
          case "road-traffic-accident":
          {
            var searchNode = Umbraco.ContentSingleAtXPath(XPath.RTASearch);

            if (searchNode != null)
            {
              searchUrl = searchNode.Url;
            }
            else
            {
              searchNode = Umbraco.Content(1325);
              searchUrl = searchNode.Url;
            }
            break;
          }
          case "remortgage":
          case "purchase-property":
          case "sell-property":
          case "transfer-of-equity":
          {
            var searchNode = Umbraco.ContentSingleAtXPath(XPath.Conveyance);

            if (searchNode != null)
            {
              searchUrl = searchNode.Url;
            }
            else
            {
              searchNode = Umbraco.Content(1412);
              searchUrl = searchNode.Url;
            }
            break;
          }
        }

        <a href="@searchUrl" class="solicitor-search__try-again button --secondary --dark">Try again</a>
      }
      else
      {
        <a href="/" class="solicitor-search__try-again button --secondary --dark">Try again</a>
      }
    }

    @foreach (var solicitor in results)
    {
      var logo = solicitor.Value<Image>("logo");
      var logoUrl = "";
      if (logo != null)
      {
        logoUrl = logo.Url;
      }
      var summary = solicitor.Value<string>("summary");

      <div class="solicitor-search__result">
        <div class="solicitor-search__result__logo" style="background-image:url('@logoUrl');">
        </div>
        <div class="solicitor-search__result__info">
          <div class="solicitor-search__result__name">
            @solicitor.Name
          </div>
          <div class="solicitor-search__result__summary">
            @summary
          </div>
          @{
            var url = solicitor.Url + "?form=" + Model.Form;
          }
          <a href="@url" class="solicitor-search__result__view-button button --secondary --dark">View Solicitor</a>
        </div>
      </div>
    }
  </div>
</div>
